# src/app/schemas/stock.py

from pydantic import BaseModel
from typing import Optional
from datetime import datetime


class StockCreate(BaseModel):
    """
    Schema for creating or updating a stock entry.
    """
    item_id: int  # ID of the item being added or updated
    project_id: Optional[int] = None  # Project ID if stock is tied to a project
    warehouse_id: Optional[int] = None  # Warehouse ID (if applicable)
    quantity: float  # Quantity of the item
    last_updated: Optional[datetime] = None  # Can be auto-generated by the server


class StockDeduct(BaseModel):
    """
    Schema for deduction a stock entry.
    """
    item_id: int  # ID of the item being deducted
    project_id: Optional[int] = None  # Project ID if stock is tied to a project
    warehouse_id: Optional[int] = None  # Warehouse ID (if applicable)
    quantity: float  # Quantity of the item
    last_updated: Optional[datetime] = None  # Can be auto-generated by the server


class StockResponse(BaseModel):
    """
    Schema for returning stock data in API responses.
    """
    id: int  # Unique ID of the stock entry
    item_id: int  # ID of the item
    project_id: Optional[int] = None  # Project ID if stock is tied to a project
    warehouse_id: Optional[int] = None  # Warehouse ID (if applicable)
    quantity: float  # Quantity of the item
    last_updated: datetime  # Timestamp of the last stock update

    class Config:
        from_attributes = True  # Ensures ORM compatibility for SQLAlchemy models
